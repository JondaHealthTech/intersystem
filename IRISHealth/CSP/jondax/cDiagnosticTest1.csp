<html>		<!-- Diagnostic Test under System setting in Side Nav -->
<head>
<script language="cache" method="OnPreHTTP" arguments="" returntype="%Boolean">
	i $g(%session.Data("UserID"))="" s %response.Redirect="cLockDown.csp" q 1
	q 1
</script>

<script language="cache" runat="server">
	s r1="",id=$g(%session.Data("UserID")) &sql(SELECT IsAdmin INTO :r1 FROM "User" WHERE ID=:id)
	i r1'=1 s %response.Redirect="cLockDown.csp"
	d HEAD1^CSP999
</script>
	<link rel="stylesheet" href="assets/styles/jxDataDictionary.css" />
</head>
    <body>
        <div id="wrapper">
            <div class="bg-wrapper">
                <div class="bg3">
                    <img src="./assets/images/bg3.png">
                </div>
            </div>
            <div id="loader" class="loader">
            	<div class="loader-content">
            		<p>Please wait for all the data to be loaded!</p>
            		<div class="lds-ring"><div></div><div></div><div></div><div></div></div>
            	</div>
            </div>
            <div class="content">
                <div class="main-field">
                    <i class="fa fa-bars mobile-active nav-toggle" style="color: #ffffff;" onclick="openMobileNav(event)"></i>
                    <img class="logo mobile-active" src="./assets/images/Jonda X Logo White Pink.png" alt="Jonda Health">
                    <div class="title">
                    	<h1>Diagnostic Tests<span id='BBCount'></span></h1>
                    </div>
                    <div id="temp-content" class="temp-content">
                    	<!-- Initial characters filter -->
                        <div class="filters">
                            <div class="text-fil">
                                <p onclick="jLoadDiagnosticTests(event)">All</p>
                                <p onclick="jLoadDiagnosticTests(event)">1-9</p>
                                <p onclick="jLoadDiagnosticTests(event)">A</p>
                                <p onclick="jLoadDiagnosticTests(event)">B</p>
                                <p onclick="jLoadDiagnosticTests(event)">C</p>
                                <p onclick="jLoadDiagnosticTests(event)">D</p>
                                <p onclick="jLoadDiagnosticTests(event)">E</p>
                                <p onclick="jLoadDiagnosticTests(event)">F</p>
                                <p onclick="jLoadDiagnosticTests(event)">G</p>
                                <p onclick="jLoadDiagnosticTests(event)">H</p>
                                <p onclick="jLoadDiagnosticTests(event)">I</p>
                                <p onclick="jLoadDiagnosticTests(event)">J</p>
                                <p onclick="jLoadDiagnosticTests(event)">K</p>
                                <p onclick="jLoadDiagnosticTests(event)">L</p>
                                <p onclick="jLoadDiagnosticTests(event)">M</p>
                                <p onclick="jLoadDiagnosticTests(event)">N</p>
                                <p onclick="jLoadDiagnosticTests(event)">O</p>
                                <p onclick="jLoadDiagnosticTests(event)">P</p>
                                <p onclick="jLoadDiagnosticTests(event)">Q</p>
                                <p onclick="jLoadDiagnosticTests(event)">R</p>
                                <p onclick="jLoadDiagnosticTests(event)">S</p>
                                <p onclick="jLoadDiagnosticTests(event)">T</p>
                                <p onclick="jLoadDiagnosticTests(event)">U</p>
                                <p onclick="jLoadDiagnosticTests(event)">V</p>
                                <p onclick="jLoadDiagnosticTests(event)">W</p>
                                <p onclick="jLoadDiagnosticTests(event)">X</p>
                                <p onclick="jLoadDiagnosticTests(event)">Y</p>
                                <p onclick="jLoadDiagnosticTests(event)">Z</p>
                                <img onclick="jLoadDiagnosticTests(event)" src="./assets/images/deleteFilterBtn.png" alt="Deleted Records">
                            </div>
                            <!-- Search bar -->
                            <div class="search-group">
                                <input type="text" id="search" placeholder="Enter Search Keyword" onkeyup="searchDataChange(event)">
                                <img src="./assets/images/search icon.png" alt="Search" class="search-icon" onclick="jLoadSearchResults(1)">
                                <div class="search-filter" onclick="openFilterDropdown(event)"><img src="./assets/images/filter-blue.png" alt="Filter"></div>
                            </div>
                        </div>
                        <!-- Diagnostic table -->
                        <div class="table-border"></div>
                        <div class="temp-table">
                            <table id="tab1" class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Diagnostic Name <div class="img-group"><img src="./assets/images/upArrow.png" alt="Up Arrow" onclick="jSortTable(1)"><img src="./assets/images/downArrow.png" alt="Down Arrow" onclick="jSortTable(2)"></div></th>
                                        <th>JX Name <div class="img-group"><img src="./assets/images/upArrow.png" alt="Up Arrow" onclick="jSortTable(3)"><img src="./assets/images/downArrow.png" alt="Down Arrow" onclick="jSortTable(4)"></div></th>
                                        <th>Category</th>
                                        <th>Save Category As</th>
                                        <th>JX Unit</th>
                                        <th>Language</th>
                                        <th>Rule</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                        <!-- Search bar filter  -->
                        <div class="filter-data dropdown-data">
                            <div class="collapse">
                                <div class="item">
                                    <div class="round">
                                        <input name="filter" id="FC1" type="checkbox" value="Diagnostic Name" checked>
                                        <label for="FC1"></label>
                                    </div>
                                    <p>Diagnostic Name</p>
                                </div>
                                <div class="item">
                                    <div class="round">
                                        <input name="filter" id="FC2" type="checkbox" value="JX Name">
                                        <label for="FC2"></label>
                                    </div>
                                    <p>JX Name</p>
                                </div>
                                <div class="item">
                                    <div class="round">
                                        <input name="filter" id="FC3" type="checkbox" value="Category">
                                        <label for="FC3"></label>
                                    </div>
                                    <p>Category</p>
                                </div>
                                <div class="item">
                                    <div class="round">
                                        <input name="filter" id="FC4" type="checkbox" value="Save Category">
                                        <label for="FC4"></label>
                                    </div>
                                    <p>Save Category</p>
                                </div>
                                <div class="item">
                                    <div class="round">
                                        <input name="filter" id="FC5" type="checkbox" value="JX Unit">
                                        <label for="FC5"></label>
                                    </div>
                                    <p>JX Unit</p>
                                </div>
                                <div class="item">
                                    <div class="round">
                                        <input name="filter" id="FC6" type="checkbox" value="Language">
                                        <label for="FC6"></label>
                                    </div>
                                    <p>Language</p>
                                </div>
                                <div class="item" style="border-bottom: none;">
                                    <div class="round">
                                        <input name="filter" id="FC7" type="checkbox" value="Rule">
                                        <label for="FC7"></label>
                                    </div>
                                    <p>Rule</p>
                                </div>
                                <button onclick="closeFilterSelect()">Confirm</button>
                            </div>
                        </div>
                        <div class="search-data dropdown-data">
                            <ul>
                            </ul>
                        </div>
                        <!-- test category drop down-->
                        <div class="category-data dropdown-data">
                            <ul>
                            </ul>
                        </div>
                        <!-- test Save category as drop down-->
                        <div class="save-category-data dropdown-data">
                            <ul>
                            </ul>
                        </div>
                        <!--  Unit dropdown -->
                        <div class="unit-data dropdown-data">
                            <ul>
                            <script language="cache" runat="server">
                            ; Load units
                            d WriteUnits^cDiagnosticTest
                            </script>
                            </ul>
                        </div>
                        <div class="language-data dropdown-data" style="max-height: 300px; overflow: auto;">
                            <div class="collapse">
                            </div>
                        </div>
                        <!-- rule dropdown -->
                        <div class="rule-data dropdown-data">
                            <ul>
                                <li onclick="changeRule(event)">1</li>
                                <li onclick="changeRule(event)">2</li>
                                <li onclick="changeRule(event)">3</li>
                                <li onclick="changeRule(event)">4</li>
                            </ul>
                        </div>
                        <div class="button-container">
                        <button type="button" class="add-row" onclick="addRow(event)">Add Row</button>
                      <!--  <button type="button" id="b1" onclick="downloadCSV()">Download CSV</button> -->
                        </div>
                    	<div class="btn-edit-group">
                    		<button class="green-btn" onclick="saveRow()">Save Changes</button>
                    		<button class="pink-btn" onclick="cancelEdit()">Cancel</button>
                    	</div>
                    </div>
                </div>
            </div>
        </div>
        <!-- popups -->
        <div id="popup1" class="popup inactive">
            <div class="popup-dialog">
                <img src="./assets/images/success.png" alt="FYI">
                <h4>Are you sure you want to delete "<span id="del-val"></span>"?</h4>
                <p>This action cannot be undone.</p>
                <div class="btn-group">
                    <button class="green-btn" onclick="confirmDelete()">Yes</button>
                    <button class="pink-btn" onclick="cancelDelete()">No</button>
                </div>
            </div>
        </div>
        <div id="popup2" class="popup inactive">
            <div class="popup-dialog">
                <img src="./assets/images/success.png" alt="FYI">
                <h4>"<span id="del-val1"></span>" is now deleted!</h4>
                <button class="green-btn" onclick="removePopup2()">Okay</button>
            </div>
        </div>
        <div id="popup3" class="popup inactive">
            <div class="popup-dialog">
                <img src="./assets/images/success.png" alt="FYI">
                <h4>Are you sure you want to save <span id="save-val"></span>?</h4>
                <div class="btn-group">
                    <button class="green-btn" onclick="confirmSave()">Yes</button>
                    <button class="pink-btn" onclick="removePopup3()">No</button>
                </div>
            </div>
        </div>
        <div id="popup4" class="popup inactive">
            <div class="popup-dialog">
                <img src="./assets/images/success.png" alt="FYI">
                <h4>Please make sure you fill up <br> both the name and the unit!!</h4>
                <button class="green-btn" onclick="removePopup4()">Okay</button>
            </div>
        </div>
        <div id="popup5" class="popup inactive">
            <div class="popup-dialog">
                <img src="./assets/images/success.png" alt="FYI">
                <h4>"<span id="save-val1"></span>" is now saved!</h4>
                <button class="green-btn" onclick="removePopup5()">Okay</button>
            </div>
        </div>
        <div id="popup6" class="popup inactive">
            <div class="popup-dialog">
                <img src="./assets/images/success.png" alt="FYI">
                <h4>Changes are now saved!</h4>
                <button class="green-btn" onclick="removePopup6()">Okay</button>
            </div>
        </div>
        <script>
            var resizefunc = [];
        </script>
        <!-- jQuery  -->
        <script src="assets/js/jquery.min.js"></script>
        <script src="assets/js/bootstrap.min.js"></script>
        <script src="assets/js/detect.js"></script>
        <script src="assets/js/fastclick.js"></script>
        <script src="assets/js/jquery.slimscroll.js"></script>
        <script src="assets/js/jquery.blockUI.js"></script>
        <script src="assets/js/waves.js"></script>
        <script src="assets/js/wow.min.js"></script>
        <script src="assets/js/jquery.nicescroll.js"></script>
        <script src="assets/js/jquery.scrollTo.min.js"></script>
        <script src="assets/js/jquery.core.js"></script>
        <script src="assets/js/jquery.app.js"></script>
    </body>
    
    <script type="text/javascript">
    	FC1 = self.FC1;FC2 = self.FC2;FC3 = self.FC3;FC4 = self.FC4;FC5= self.FC5;FC6 = self.FC6;FC7 = self.FC7;
        let popup1 = document.getElementById("popup1");
        let popup2 = document.getElementById("popup2");
        let popup3 = document.getElementById("popup3");
        let popup4 = document.getElementById("popup4");
        let popup5 = document.getElementById("popup5");
        let popup6 = document.getElementById("popup6");
        let currentTr;
        let val1;
        let val2;
        let val3;
        let val4;
        let val5;
        let val6;
        let tempVal6="";
        let val7;
        let bk;
        let langArr = [];
        let dropDownText = " <img src='./assets/images/dropDownDarkBlue.png' alt='Dropdown'>"
        let filterData = document.querySelector(".filter-data");
        let searchData = document.querySelector(".search-data");
        let categoryData = document.querySelector(".category-data");
        let saveCategoryData = document.querySelector(".save-category-data");
        let unitData = document.querySelector(".unit-data");
        let languageData = document.querySelector(".language-data");
        let ruleData = document.querySelector(".rule-data");
        let currentOrder = 1;
        let currentLoadData = "";
        let lastViewDate;
        let prevSearchData;
        let userID;
        let dataExist=false;
        window.onresize = setTableBorderPos;
        window.onload = jInitMe;
        let searching = false;
        
        // Pop table and set ^LastViewDate
        function jInitMe(){
	        #server(..cInitMe())#
	        setTableBorderPos();
	    	document.getElementById("loader").style.display = "none";
        }
        // Set and adjust table border
        function setTableBorderPos(){
            let tableBorder = document.querySelector(".table-border");
            let tempTable = document.querySelector(".temp-table");
            let table = document.querySelector("table");
            let filter = document.querySelector(".filters");
            
            setTimeout(()=>{
	            let tablePosition = table.getBoundingClientRect();
            	if(tempTable.scrollHeight > tempTable.clientHeight){
                	tableBorder.style.height = "calc(60vh + 4px)"
            	}
            	else{
		        	tableBorder.style.height = tablePosition.height + 4 + "px";
            	}
            	tableBorder.style.width = tablePosition.width + 4 + "px";
            	filter.style.width = tablePosition.width;
            },100);
        }
        // Create input boxes for editing
        function editRow(e){
	    	if(currentTr==null){
	    		currentTr = e.target.parentElement.parentElement;
	    		tds = currentTr.querySelectorAll("td");
	    		val1 = tds[1].textContent;
	    		val2 = tds[2].textContent;
                val3 = tds[3].textContent;
                val4 = tds[4].textContent;
                val5 = tds[5].textContent;
                val6 = tds[6].textContent;
                tempVal6 = tds[6].textContent;
                val7 = tds[7].textContent;
	    		tds[1].innerHTML = "<input type='text' name='diagnostic-name' value='"+val1+"'>";
	    		tds[2].innerHTML = "<input type='text' name='jx-name' value='"+val2+"'>";
	    		tds[3].innerHTML = "<input type='text' name='category' value='"+val3+"' onkeyup='openCategorySuggestion(event)'>";
	    		tds[4].innerHTML = "<input type='text' name='save-category' value='"+val4+"' onkeyup='openSaveCategorySuggestion(event)'>";
	    		tds[5].innerHTML = "<div class='unit-dropdown dropdown-btn' onclick='openUnitDropdown(event)'>"+val5 + dropDownText+"</div>";
	    		tds[6].innerHTML = "<div class='language-dropdown dropdown-btn' onclick='openLanguageDropdown(event)'>"+val6 + dropDownText+"</div>";
	    		tds[7].innerHTML = "<div class='rule-dropdown dropdown-btn' onclick='openRuleDropdown(event)'>"+val7 + dropDownText+"</div>";
	    		tds[8].classList.add("hidden");
                document.querySelector(".btn-edit-group").style.display="block";
    			document.querySelector(".add-row").style.display="none";
    			setLanguage();
    			closeLanguageSelect();
	    	}
	    	else{
		    	alert("You cannot edit multiple testnames at the same time");
	    	}
            setTableBorderPos();
    	}
    	// Pop sorted table (1,2=Diagnostic name, 3,4= JXName)
    	function jSortTable(order){
	    	if(order==currentOrder){ return;}
		    if(document.querySelectorAll("tbody tr").length<=1){
		    	return;
		    }
	    	if(searching){
		    	jLoadSearchResults(order);
		    	return;
		    }
	    	document.getElementById("loader").style.display = "block";
	    	#server(..cLoadDiagnosticTests(currentLoadData,order,lastViewDate))#
	    	currentOrder = order;
	    	document.getElementById("loader").style.display = "none";
            setTableBorderPos();
    	}
    	
    	// Pop table with filter character or num or all
    	function jLoadDiagnosticTests(e){
	    	let start=e.target.textContent;
	    	searching=false;
	    	if(start==""){
		    	start="deleted";
    			document.querySelector(".add-row").style.display="none";
	    	}
	    	if(start.startsWith("1")){
		    	start="num"
	    	}
	    	if(start=="All"){
		    	start=""
	    	}
	    	if(currentLoadData==start && currentOrder==1){return;}
	    	if(start!="deleted"){
    			document.querySelector(".add-row").style.display="block";
	    	}
	    	document.getElementById("loader").style.display = "block";
	    	#server(..cLoadDiagnosticTests(start,1,lastViewDate))#
	    	currentLoadData=start;
	    	currentOrder=1;
	    	document.getElementById("loader").style.display = "none";
	    	setTableBorderPos();
    	}
    	// Activate popup to confirm delete row
    	function deleteRow(e){
	    	currentTr = e.target.parentElement.parentElement;
            let value = currentTr.querySelectorAll("td")[1].textContent;
	    	document.getElementById("del-val").innerHTML = value;
	    	document.getElementById("del-val1").innerHTML = value;
	    	setTimeout(()=>{
	    		popup1.classList.remove("inactive");
	    	},100);
    	}
    	// Delete row
    	function confirmDelete(){
	    	removePopup1();
	    	#server(..cDeleteDiagnosticTest(currentTr.getAttribute("key")))#
    		currentTr.remove();
    		currentTr=null;
            setTimeout(()=>{
                popup2.classList.remove("inactive");
            },100)
    	}
    	// Cancel delete
        function cancelDelete(){
            currentTr=null;
            removePopup1();
        }
        // Deactivate rule filter dropdown
        function closeFilterSelect(){
	        filterData.classList.remove("active");
        }
        // Set English as default Language
        function setLanguage(){
	        let languages = tempVal6==""?"English":tempVal6;
	        let LCs = document.querySelectorAll("input[name='language']");
	        langArr.forEach((val,index)=>{
		        if(languages.search(val)!=-1){
			        LCs[index].checked=true;
		        }
		        else{
			        LCs[index].checked=false;
		        }
	        })
        }
        // Get selected language and close Language dropdown
        function closeLanguageSelect(){
	        let languageChecked = document.querySelectorAll("input[name=language]:checked");
	        if(languageChecked.length==0){
		        currentTr.querySelector(".language-dropdown").innerHTML = "English" + dropDownText;
	        }
	        else if(languageChecked.length==1){
		        currentTr.querySelector(".language-dropdown").innerHTML = languageChecked[0].value + dropDownText;
	        }
	        else{
		        currentTr.querySelector(".language-dropdown").innerHTML = "Multiple" + dropDownText;
	        }
	        tempVal6="";
	        for(let i=0;i<languageChecked.length;i++){
		        if(i!=0){tempVal6=tempVal6+", ";}
		        tempVal6 = tempVal6+languageChecked[i].value;
	        }
	        languageData.classList.remove("active");
        }
        // Deactivate Popups
        function removePopup1(){
            popup1.classList.add("inactive");
        }
        function removePopup2(){
            popup2.classList.add("inactive");
        }
        function removePopup3(){
            popup3.classList.add("inactive");
        }
        function removePopup4(){
            popup4.classList.add("inactive");
        }
        function removePopup5(){
            popup5.classList.add("inactive");
        }
        function removePopup6(){
            popup6.classList.add("inactive");
        }
    	// Create input boxes for new row
    	function addRow(e){
	    	let tempTable = document.querySelector(".temp-table");
	    	let tbody = document.querySelector("tbody");
	    	let tr = document.createElement("tr");
	    	tr.classList.add("new");
            let tableData = "<td class='id'>---</td>";
            tableData = tableData+"<td class='diagnostic-name'><input type='text' name='diagnostic-name' value=''></td>";
            tableData = tableData+"<td class='jx-name'><input type='text' name='jx-name' value=''></td>";
            tableData = tableData+"<td class='category'><input type='text' name='category' value='' onkeyup='openCategorySuggestion(event)'></td>";
            tableData = tableData+"<td class='save-category'><input type='text' name='save-category' value='' onkeyup='openSaveCategorySuggestion(event)'></td>";
            tableData = tableData+"<td class='jx-unit'><div class='unit-dropdown dropdown-btn' onclick='openUnitDropdown(event)'>" + dropDownText+"</div></td>"
            tableData = tableData+"<td class='language'><div class='language-dropdown dropdown-btn' onclick='openLanguageDropdown(event)'>English " + dropDownText+"</div></td>"
            tableData = tableData+"<td class='rule'><div class='rule-dropdown dropdown-btn' onclick='openRuleDropdown(event)'>4 " + dropDownText+"</div></td>"
	    	tableData = tableData+"<td class='action hidden'><img class='edit-icon' src='./assets/images/edit.png' alt='Edit' onclick='editRow(event)'> <img src='./assets/images/delete.png' alt='Delete' onclick='deleteRow(event)'></td>"
	    	tr.innerHTML = tableData;
    		tbody.prepend(tr);
    		currentTr = tr;
    		tempTable.scrollTop = 0;
    		e.target.style.display="none";
    		document.querySelector(".btn-edit-group").style.display="block";
            setTableBorderPos();
    	}
    	// Activate popup4 to confirm saving new row
    	function saveRow(){
	    	let tds = currentTr.querySelectorAll("td");
	    	if(tds[1].querySelector("input").value=="" || tds[2].querySelector("input").value==""){
		    	setTimeout(()=>popup4.classList.remove("inactive"),100);
		    	return;
	    	}
	    	if(currentTr.classList.contains("new")){
	    		document.getElementById("save-val").innerHTML = "\""+tds[1].querySelector("input").value+"\"";
	    		document.getElementById("save-val1").innerHTML = tds[1].querySelector("input").value;
	    	}
	    	else{
	    		document.getElementById("save-val").innerHTML = "changes";
	    	}
	    	setTimeout(()=>popup3.classList.remove("inactive"),100);
    	}
    	// Save new row
    	function confirmSave(){
	    	let tds = currentTr.querySelectorAll("td");
	    	let id;
	    	val1 = tds[1].querySelector("input").value;
	    	val2 = tds[2].querySelector("input").value;
	    	val3 = tds[3].querySelector("input").value;
	    	val4 = tds[4].querySelector("input").value;
	    	val5 = tds[5].querySelector(".dropdown-btn").textContent;
	    	val6 = tempVal6==""?"English":tempVal6;
	    	val7 = tds[7].querySelector(".dropdown-btn").textContent;
	    	if(currentTr.classList.contains("new")){
		    	id=""
	    	}
	    	else{
		    	id=currentTr.getAttribute("key");
	    	}
		    #server(..cSaveUpdateDiagnosticTest(id,val1,val2,val3,val4,val5,val6,val7))#
		    if(dataExist){
			    dataExist=false;
			    removePopup3();
			    return;
		    }
	    	tds[1].innerHTML = val1;
	    	tds[2].innerHTML = val2;
	    	tds[3].innerHTML = val3;
	    	tds[4].innerHTML = val4;
	    	tds[5].innerHTML = val5;
	    	tds[6].innerHTML = val6;
	    	tds[7].innerHTML = val7;
            tds[8].classList.remove("hidden");
            if(userID==3 || userID==2){
				currentTr.classList.add("highlight");
	        }
	        else{
				currentTr.classList.add("pending");
	        }
	        currentTr.classList.remove("new");
	    	popup3.classList.add("inactive");
    		document.querySelector(".btn-edit-group").style.display="none";
    		document.querySelector(".add-row").style.display="block";
    		tempVal6="";
    		currentTr=null;
    	}
    	// Cancel edit/add row
    	function cancelEdit(){
	    	if(currentTr==document.querySelector("tbody").firstElementChild && currentTr.classList.contains("new")){
		    	document.querySelector("tbody").firstElementChild.remove();
	    	}
	    	else{
	    		tds = currentTr.querySelectorAll("td");
	    		tds[1].innerHTML = val1;
	    		tds[2].innerHTML = val2;
	    		tds[3].innerHTML = val3;
	    		tds[4].innerHTML = val4;
	    		tds[5].innerHTML = val5;
	    		tds[6].innerHTML = val6;
	    		tds[7].innerHTML = val7;
	    		tds[8].classList.remove("hidden");
	    	}
	    	currentTr = null;
    		document.querySelector(".btn-edit-group").style.display="none";
    		document.querySelector(".add-row").style.display="block";
            languageData.classList.remove("active");
            unitData.classList.remove("active");
            ruleData.classList.remove("active");
            categoryData.classList.remove("active");
            saveCategoryData.classList.remove("active");
            setTableBorderPos();
    	}
    	// Activate filter dropdown in search bar
        function openFilterDropdown(e){
            let position = e.target.closest(".search-filter").getBoundingClientRect();
            filterData.style.top = position.bottom + 2 + "px";
            filterData.style.right = window.innerWidth - position.right + "px";
            setTimeout(()=>{
                filterData.classList.toggle("active");
            },100);
        }
        // Activate category dropdown
        function openCategorySuggestion(e){
	        let category = e.target.value;
	        #server(..cLoadCategoryNames(category))#
            let position = e.target.getBoundingClientRect();
            categoryData.style.top = position.bottom + 2 + "px";
            categoryData.style.left = position.left;
            setTimeout(()=>{
		        if(categoryData.querySelector("ul").scrollWidth > categoryData.querySelector("ul").clientWidth){
            		categoryData.style.width = "auto";
            	}
            	else if(categoryData.getBoundingClientRect().width < position.width){
                    categoryData.style.width = position.width;
                }
	        },100);
            if(categoryData.classList.contains("active")){return;}
            setTimeout(()=>{
		        categoryData.classList.add("active");
                if(categoryData.getBoundingClientRect().width < position.width){
                    categoryData.style.width = position.width;
                }
	        },100);
        }
        // Activate save category as dropdown
        function openSaveCategorySuggestion(e){
	        let category = e.target.value;
	        #server(..cLoadCategoryResultTypes(category))#
            let position = e.target.getBoundingClientRect();
            saveCategoryData.style.top = position.bottom + 2 + "px";
            saveCategoryData.style.left = position.left;
            setTimeout(()=>{
		        if(saveCategoryData.querySelector("ul").scrollWidth > saveCategoryData.querySelector("ul").clientWidth){
            		saveCategoryData.style.width = "auto";
            	}
            	else if(saveCategoryData.getBoundingClientRect().width < position.width){
                    saveCategoryData.style.width = position.width;
                }
	        },100);
            if(saveCategoryData.classList.contains("active")){return;}
	        setTimeout(()=>{
		        saveCategoryData.classList.add("active");
                if(saveCategoryData.getBoundingClientRect().width < position.width){
                    saveCategoryData.style.width = position.width;
                }
	        },100);
        }
        // Activate unit dropdown
        function openUnitDropdown(e){
            let position = e.target.closest(".dropdown-btn").getBoundingClientRect();
            unitData.style.top = position.bottom + 2 + "px";
            unitData.style.left = position.left;
            setTimeout(()=>{
                unitData.classList.toggle("active");
                if(unitData.getBoundingClientRect().width < position.width){
                    unitData.style.width = position.width;
                }
            },100);
        }
        // Activate Language dropdown
        function openLanguageDropdown(e){
            let position = e.target.closest(".dropdown-btn").getBoundingClientRect();
            setLanguage();
            languageData.style.top = position.bottom + 2 + "px";
            languageData.style.left = position.left;
            setTimeout(()=>{
                languageData.classList.add("active");
            },100);

        }
        // Activate rule dropdown
        function openRuleDropdown(e){
            let position = e.target.closest(".dropdown-btn").getBoundingClientRect();
            ruleData.style.top = position.bottom + 2 + "px";
            ruleData.style.left = position.left;
            setTimeout(()=>{
                ruleData.classList.toggle("active");
                if(ruleData.getBoundingClientRect().width < position.width){
                    ruleData.style.width = position.width;
                }
            },100);
        }
        // Selecting from dropdowns
        function changeCategory(e){
	        currentTr.querySelector(".category input").value = e.target.textContent;
	        categoryData.classList.remove("active");
        }
        function changeSaveCategory(e){
	        currentTr.querySelector(".save-category input").value = e.target.textContent;
	        saveCategoryData.classList.remove("active");
        }
        function changeUnit(e){
            currentTr.querySelector(".unit-dropdown").innerHTML = e.target.textContent + dropDownText;
            unitData.classList.remove("active");
        }
        function changeRule(e){
            currentTr.querySelector(".rule-dropdown").innerHTML = e.target.textContent + dropDownText;
        }
        
        // Pop table with search result
        function jLoadSearchResults(order){
	    	document.getElementById("loader").style.display = "block";
	        #server(..cLoadSearchResults(order))#
	        currentOrder = order;
			searchData.classList.remove("active");
	    	document.getElementById("loader").style.display = "none";
        }
        // Load search suggestions
        function searchDataChange(e){
	        searching = true;
	        if(e.keyCode==13){
		        currentLoadData = e.target.value;
		        jLoadSearchResults(1);
		        setTableBorderPos();
			    return;
	        }
	        if(e.target.value.length==0){
		        searchData.classList.remove("active");
		        currentOrder=1
		        return;
	        }
	        let position = e.target.closest(".search-group").getBoundingClientRect();
            searchData.style.top = position.bottom + 2 + "px";
            searchData.style.left = position.left;
           	if(e.target.value==prevSearchData){}
	        else{
		        prevSearchData=e.target.value;
	        	#server(..cClearSearchData())#
	        	if(FC1.checked){
	        		#server(..cSearchDiagnosticName(e.target.value))#
	        	}
	        	if(FC2.checked){
	        		#server(..cSearchJXName(e.target.value))#
	        	}
	        	if(FC3.checked){
	        		#server(..cSearchCategory(e.target.value))#
	        	}
	        	if(FC4.checked){
	        		#server(..cSearchSaveCategory(e.target.value))#
	        	}
	        	if(FC5.checked){
	        		#server(..cSearchJXUnit(e.target.value))#
	        	}
	        	if(FC6.checked){
	        		#server(..cSearchLanguage(e.target.value))#
	        	}
	        	if(FC7.checked){
	        		#server(..cSearchRule(e.target.value))#
	        	}
	        	#server(..cLoadSearchSuggestions())#
	        	setTimeout(()=>{
              		searchData.classList.add("active");
               		if(searchData.getBoundingClientRect().width < position.width){
                   		searchData.style.width = position.width;
               		}
           		},100);
	        }
        }
        // Select from search suggestions
        function jLoadSearchData(e){
	        searching = true;
	        let searchVal = e.target.textContent;
	        document.getElementById("search").value = searchVal;
            searchData.classList.remove("active");
	        let search = e.target.getAttribute("value").split(":");
	        let searchType = search[0];
	        let searchId = search[1];
	        #server(..cClearSearchData())#
	        switch(searchType){
		        case 'Name':#server(..cSearchDiagnosticName(searchVal))#;break;
		        case 'JX Name':#server(..cSearchJXName(searchVal))#;break;
		        case 'Category':#server(..cSearchCategory(searchVal))#;break;
		        case 'Save Category':#server(..cSearchSaveCategory(searchVal))#;break;
		        case 'JX Unit':#server(..cSearchJXUnit(searchVal))#;break;
		        case 'Language':#server(..cSearchLanguage(searchVal))#;break;
		        case 'Rule':#server(..cSearchRule(searchVal))#;break;
	        }
	        currentLoadData=searchVal;
	        jLoadSearchResults(1);
            setTableBorderPos();
        }
        
        // Deactivate popups
        document.addEventListener("click",(e)=>{
            if(e.target.closest(".popup-dialog")==null){
                removePopup1();
                removePopup2();
                removePopup3();
                removePopup4();
                removePopup5();
                removePopup6();
            }
            if(e.target.closest(".dropdown-data")==null && e.target.closest(".search-filter") == null ){
                filterData.classList.remove("active");
            }
            if(e.target.closest(".dropdown-data")==null && e.target.closest(".unit-dropdown") == null){
                unitData.classList.remove("active");
            }
            if(e.target.closest(".dropdown-data")==null && e.target.closest(".language-dropdown") == null && languageData.classList.contains("active")){
                closeLanguageSelect();
            }
            if(e.target.closest(".dropdown-data")==null && e.target.closest(".rule-dropdown") == null){
                ruleData.classList.remove("active");
            }
            if(e.target.closest(".dropdown-data")==null && e.target.closest(".search-dropdown") == null){
	            searchData.classList.remove("active");
            }
            if(e.target.closest(".dropdown-data")==null && e.target.closest(".category-dropdown") == null){
	            categoryData.classList.remove("active");
            }
            if(e.target.closest(".dropdown-data")==null && e.target.closest(".save-category-dropdown") == null){
	            saveCategoryData.classList.remove("active");
            }
        })
        
        // Download table as csv (hidden)
        function downloadCSV(){
	        const table = document.getElementById('tab1');
	        let csvData = [];
        	const rows = table.querySelectorAll('tr');
        	rows.forEach(row => {
            	let rowData = [];
            	const cells = row.querySelectorAll('td, th');
            	cells.forEach(cell => {
                	rowData.push(cell.textContent);
            	});
            	csvData.push(rowData.join('\t'));
        	});
        	const csvContent = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csvData.join('\n'));
        	const link = document.createElement('a');
        	link.setAttribute('href', csvContent);
        	link.setAttribute('download', 'Diagnostic_Test.csv');
        	link.style.display = 'none';
        	document.body.appendChild(link);
        	link.click();
        	document.body.removeChild(link);       
        }
    </script>   
    
<script language="cache" method="cInitMe">
	d InitMe^cDiagnosticTest
</script>
<script language="cache" method="cLoadDiagnosticTests" arguments="d1:%String,orderCol:%Integer,lastViewDate:%String">
	d LoadDiagnosticTests^cDiagnosticTest(d1,orderCol,lastViewDate)
</script>
<script language="cache" method="cLoadCategoryNames" arguments="name:%String">
	d LoadCategoryNames^cDiagnosticTest
</script>
<script language="cache" method="cLoadCategoryResultTypes" arguments="resultType:%String">
	d LoadCategoryResultTypes^cDiagnosticTest
</script>
<script language="cache" method="cSaveUpdateDiagnosticTest" arguments="id,name,jxName,category,saveCategory,jxUnit,language,rule:%String">
	d SaveUpdateDiagnosticTest^cDiagnosticTest
</script>
<script language="cache" method="cDeleteDiagnosticTest" arguments="id:%String">
	d DeleteDiagnosticTest^cDiagnosticTest
</script>
<script language="cache" method="cClearSearchData">
	k ^SearchData
	k ^SearchName
	k ^SearchJXName
</script>

<script language="cache" method="cSearchDiagnosticName" arguments="searchVal:%String">
	d SearchDiagnosticName^cDiagnosticTest
</script>
<script language="cache" method="cSearchJXName" arguments="searchVal:%String">
	d SearchJXName^cDiagnosticTest
</script>
<script language="cache" method="cSearchCategory" arguments="searchVal:%String">
	d SearchCategory^cDiagnosticTest
</script>
<script language="cache" method="cSearchSaveCategory" arguments="searchVal:%String">
	d SearchSaveCategory^cDiagnosticTest
</script>
<script language="cache" method="cSearchJXUnit" arguments="searchVal:%String">
	d SearchJXUnit^cDiagnosticTest
</script>
<script language="cache" method="cSearchLanguage" arguments="searchVal:%String">
	d SearchLanguage^cDiagnosticTest
</script>
<script language="cache" method="cSearchRule" arguments="searchVal:%String">
	d SearchRule^cDiagnosticTest
</script>
<script language="cache" method="cLoadSearchSuggestions" arguments="searchVal:%String">
	d LoadSearchSuggestions^cDiagnosticTest
</script>
<script language="cache" method="cLoadSearchResults" arguments="orderCol:%String">
	d LoadSearchResults^cDiagnosticTest
</script>

<!-- below not using -->
<script language="cache" method="cLoadByID" arguments="id:%String">
	d LoadTableByID^cDiagnosticTest
</script>
<script language="cache" method="cLoadByCategory" arguments="searchVal:%String">
	d LoadTableByCategory^cDiagnosticTest
</script>
<script language="cache" method="cLoadBySaveCategory" arguments="searchVal:%String">
	d LoadTableBySaveCategory^cDiagnosticTest
</script>
<script language="cache" method="cLoadByJXUnit" arguments="searchVal:%String">
	d LoadTableByJXUnit^cDiagnosticTest
</script>
<script language="cache" method="cLoadByLanguage" arguments="searchVal:%String">
	d LoadTableByLanguage^cDiagnosticTest
</script>
<script language="cache" method="cLoadByRule" arguments="searchVal:%String">
	d LoadTableByRule^cDiagnosticTest
</script>
</html>
