<!--
Utilities: Resend Messages
-->

<AutoPageENS domain="Ensemble" pagename="Resend" parentpage="UtilEnsMessages.csp" title="@Ensemble:MsgResendTitle@Resend Messages">

<html>
<head>
<title>Resend Messages</title>
<link rel="stylesheet" type="text/css" href="/csp/sys/csputils.css" title="Standard Style" />
<script language=Cache runat=server>
	#Include Ensemble
	#Define MaxDisplayRows 1000
	Set %session.Data("MaxDisplayRows")=$$$MaxDisplayRows
	Set n=0
	Set hasMore=$G(%request.Data("$MORE",1))
	Set msgIds=$G(%request.Data("msgResendIDs",1),$G(%request.Data("$ID1",1)))
	Set action=$G(%request.Data("action",1))
	
	Kill %session.Data("tSCMore"),%session.Data("msgTopOverflow"),%session.Data("msgMaxDisplay")
	
	Set tProduction = $G($$$EnsRuntime("Name"))
	If action="" { ; confirmation page
		If ""'=tProduction {
			Set tRS = ##class(%ResultSet).%New("Ens.Config.Production:EnumerateConfigItems")
			Do tRS.Execute(tProduction,-$$$eHostTypeService,0) ; ConfigItemName,CommentOrClassName,Enabled,BusinessType,ClassName,RequestClasses,ResponseClasses
			While (tRS.Next()) {
				Set tClassName=$G(tRS.Data("ClassName"))
				Set iprod=$I(svcsorted)
				Set svcsorted(iprod) = $G(tRS.Data("ConfigName"))
				Set svcsorted(iprod,"coc")=$G(tRS.Data("CommentOrClassName"))
				Set:svcsorted(iprod)=$G(svcsorted(iprod-1)) svcsorted(iprod,"coc+")=1, svcsorted(iprod-1,"coc+")=1
			}
			Do tRS.Close()
			Set tRS = $$$NULLOREF

			#; Move IDs into IRIS.Temp
			Set ctKey=$I(^IRIS.Temp.ResendIDs)
			If $IsObject(msgIds) { // msgIds is a stream
				Set tCurrData = ""
				While 'msgIds.AtEnd {
					// Avoid <MAXSTRING>
					Set tData = msgIds.Read(16000)
					Set tCurrData = tCurrData _ tData
					Set tCount = $length(tCurrData, ",")
					For i=1:1:(tCount-1) {
						Set msgid = $zstrip($piece(tCurrData, ",", i), "<>W")
						Continue:(msgid = "")
						Set ^IRIS.Temp.ResendIDs(ctKey, msgid) = ""
						Set n = n + 1
						Set tLastID = msgid
					}
					Set tCurrData = $zstrip($piece(tCurrData, ",", tCount), "<>W")
				}
				If tCurrData '= "" {
					Set ^IRIS.Temp.ResendIDs(ctKey, tCurrData) = ""
					Set n = n + 1
					Set tLastID = tCurrData
				}
			}
			Else {
				Set tCount=$L(msgIds,",")
				For i=1:1:tCount { Set msgid=$ZStrip($P(msgIds,",",i),"<>W")  Continue:""=msgid
					Set ^IRIS.Temp.ResendIDs(ctKey,msgid)="", n=n+1, tLastID = msgid
				}
			}
			If hasMore {
				#; Append the rest of the matching IDs to the first page of IDs we got passed
				Set tFilterObj=##class(CSPX.EnsMsgFilterForm).%New()
				Set tFilterObj.%Name=$G(%request.Data("FilterName",1))
				Set tFilterObj.Status=$G(%request.Data("Status",1))
				Set tFilterObj.StartTime=$G(%request.Data("StartTime",1))
				Set tFilterObj.EndTime=$G(%request.Data("EndTime",1))
				Set tFilterObj.StartId=$G(%request.Data("StartId",1))
				Set tFilterObj.EndId=$G(%request.Data("EndId",1))
				Set tFilterObj.Type=$G(%request.Data("Type",1))
				Set tFilterObj.Source=$G(%request.Data("Source",1))
				Set tFilterObj.IsError=$G(%request.Data("IsError",1))
				; get 'em all - Set tFilterObj.MaxRows=$G(%request.Data("MaxRows",1))
				Set tFilterObj.SortOrder=$G(%request.Data("SortOrder",1))
				; don't care - Set tFilterObj.TimeFormat=$G(%request.Data("TimeFormat",1))
				; don't care - Set tFilterObj.ColorBy=$G(%request.Data("ColorBy",1))
				Set tFilterObj.TermsStr=$G(%request.Data("TermsStr",1))
				Set:""'=tFilterObj.TermsStr sc=tFilterObj.%Terms.Clear(), tSC=##class(Ens.Util.XML.Reader).ObjectsFromString(tFilterObj.%Terms,tFilterObj.TermsStr,"EnsPortal.MsgFilter.Term")

				#; Run the query starting from next ID just as if we were the message browser page
				Set tRS=##class(%ResultSet).%New("CSPX.EnsMsgTablePane:Enumerate")
				Set tRS.RuntimeMode = 2
				Set tNextId = tLastID + $S(tFilterObj.SortOrder=2:-1,1:1)
				Set tSCMore=tRS.Execute(tFilterObj,tNextId)
				If $$$ISOK(tSCMore) {
					#; Complete the msgID list
					While tRS.Next() { Set hasMore=hasMore+1
						Kill tPropVals
						If '$D(tPropVals("ID"),val) {
							Set val=tRS.GetData(1)
						}
						If "<tc>"=val { 
							Set tTopCount=##class(CSPX.EnsMsgTablePane).%GetParameter("TOPCOUNT")
							Set %session.Data("msgTopOverflow")=$ZCVT($$$FormatText($$$Text("Reached TOP limit of %1"),tTopCount),"O","HTML")
						} Else {
							Set ^IRIS.Temp.ResendIDs(ctKey,val)="", n=n+1
						}
					}
					Set %session.Data("tRS")=1
				} Else {
					Set %session.Data("tSCMore")=tSCMore
				}
			}
			Set ^IRIS.Temp.ResendIDs(ctKey)=n
			If n>$$$MaxDisplayRows {
				Set %session.Data("msgMaxDisplay")=$ZCVT($$$FormatText($$$Text("Cannot display more than %1 rows, but all %2 matching messages will be resent"),$$$MaxDisplayRows,n),"O","HTML")
			}
			Set msgIds="@"_ctKey
		}
	}
	Set msgNewTargPrompt = $ZCVT($$$LocalizeText("Ensemble","msgNewTargPrompt","Enter the name of a new target to which the selected messages should be re-sent"),"O","JS")
	Set msgNoResults = $ZCVT($$$LocalizeText("Ensemble","msgNoResults","Failed to fetch additional matching messages"),"O","HTML")
</script>
<script language="javascript">

function doResend()
{
	var idsList = '#(msgIds)#';
	var status=#server(..resendMessages(self.document.getElementById("NewTarget").value, self.document.getElementById("HeadOfQueue").checked, idsList))#;
	//document.location='#(..Link("UtilEnsMsgResend.csp?action=done&$ID1="))#' + status; // OLD
	document.location='#(..Link("UtilEnsMsgResend.csp",,1))#' + 'action=done&$ID1=' + status; // HCR160
}

function doEditResend()
{
	var target=self.document.getElementById("NewTarget").value;
	var headOfQueue=self.document.getElementById("HeadOfQueue").checked;
	//document.location='#(..Link("UtilEnsMsgEditResend.csp?action=done&$ID1=")_$S(tProduction="":"",1:$O(^IRIS.Temp.ResendIDs($E(msgIds,2,*),"")))_"&$ID2=")#' + headOfQueue + '|' + target + '|Clone'; // OLD
	document.location='#(..Link("UtilEnsMsgEditResend.csp",,1))#' + 'action=done&$ID1=' + #($S(tProduction="":"",1:$O(^IRIS.Temp.ResendIDs($E(msgIds,2,*),""))))# + '&$ID2=' + headOfQueue + '|' + target + '|Clone'; // HCR160
}

function changeTarget()
{
	var name = self.document.getElementById("TargetSel").value;

	if (name=='') {
		name=prompt('#(msgNewTargPrompt)#','');
	}
	if (name && name!='') {
		var link = #server(..getQueueLink(name))#;
		if (link=='') {
			alert('Target \''+name+'\' not found in currently running Production');
			link='<a href=""><b>'+name+'</b></a>';
		} else {
			link='<a target=_blank href="'+link+'"><b>'+name+'</b></a>';
		}
		for (var i = 1; i <= #($S(n>$$$MaxDisplayRows:$$$MaxDisplayRows,1:n))#; i++) {
			targ = self.document.getElementById("targ_"+i);
			if (targ) {
				targ.innerHTML = link;
			}
		}
		self.document.getElementById("NewTarget").value=name;
		self.document.getElementById("TargetHead").innerHTML = '#($$$TextJS("New Target","Ensemble"))#';
		self.document.getElementById("TargetSel").selectedIndex = 0;
		return true;
	} else {
		return false;
	}
}

</script>
</head>
<body>

<form name="theForm">

<script language=Cache runat=server>
	#Include Ensemble
	Set tMax=%session.Data("MaxDisplayRows")
	Set ctKey=$S("@"=$E(msgIds):$E(msgIds,2,*),1:"")
	If action="" { ; confirmation page
		Set tProduction = $G($$$EnsRuntime("Name"))
		If ""=tProduction {
			Set msgCantResend = $ZCVT($$$LocalizeText("Ensemble","msgCantResend","Cannot resend - Production not running."),"O","HTML")
			&html<<br><div style="margin-left: 40px;" >#(msgCantResend)#</div>>
		} Else {
			If hasMore {
				If $$$ISERR($G(%session.Data("tSCMore"),$$$OK)) {
					Do ##class(CSPX.EnsMsgTablePane).DrawStatusError(%session.Data("tSCMore"))
					Quit
				}
				If '$G(%session.Data("tRS")) {
					// no result set; most likely empty query string
					&html<<div style="margin-left: 20px; font-size: 0.8em;"><i>#(msgNoResults)#</i></div>>
					Quit
				}
			}
			Set msgEditResend = $$$TextJS("Edit and then Resend the message","Ensemble")
			Set msgCantEdit = $$$TextJS("Edit & Resend is only allowed when a single message is shown","Ensemble")
			Set msgNewTarget = $$$TextJS("Select a new config target from the dropdown list and then click this button to apply it as the destination for every message listed below","Ensemble")
			Set tMsg = $$$TextHTML("Resend these messages","Ensemble")
			Set tYes = $$$TextHTML("Yes","Ensemble")
			Set tNo = $$$TextHTML("No","Ensemble")
			Set tEditResend = $$$TextHTML("Edit then Resend","Ensemble")
			Set tSetNew = $$$TextHTML("Set New Target","Ensemble")

			&html<<div class="Text1">
				<h3>#(tMsg)#?&nbsp;
				<input type=button value="#(tNo)#"  onclick="document.location='#(..Link("UtilEnsMsgResend.csp?action=cancel&$ID1="_msgIds))#'">
				<input type=button value="#(tYes)#" onclick="doResend();">
				<input type=button value="#(tEditResend)#" #($S(n=1:"onclick=""self.doEditResend();"" title="""_msgEditResend_"""", 1:"disabled title="""_msgCantEdit_""""))#>
				<input type=button value="#(tSetNew)#:" onclick="self.changeTarget();" title="#(msgNewTarget)#">
			    <select name="TargetSel" WIDTH="16">
				<option value="" selected></option>>
			Set isvc="" For { Set isvc=$O(svcsorted(isvc))  Quit:isvc=""
				Set svcname=svcsorted(isvc)_$S($G(svcsorted(isvc,"coc+")):"|"_svcsorted(isvc,"coc"),1:"")
				&html<<option value="#(svcname)#">#(svcname)#</option>>
			}
			Set tMsg = $$$TextHTML("Insert resubmitted messages at head of Queue","Ensemble")
			Set tH1 = $$$TextHTML("Session","Ensemble")
			Set tH2 = $$$TextHTML("Header","Ensemble")
			Set tH3 = $$$TextHTML("Msg Body","Ensemble")
			Set tH4 = $$$TextHTML("Created","Ensemble")
			Set tH5 = $$$TextHTML("Source","Ensemble")
			Set tH6 = $$$TextHTML("Target","Ensemble")
			
			&html<</select></div>
				<div style="margin-left: 20px; font-size: 0.8em;">
				#(tMsg)#
				<input type="checkbox" id="HeadOfQueue"/>
				<input type=hidden  name='NewTarget' value=''>
				</div>
				<br>
				<div style="margin-left: 20px;">
				<table border=1 cellpadding=4 cellspacing=0>
				<tr align=center><th>#(tH1)#</th><th>#(tH2)#</th><th>#(tH3)#</th><th>#(tH4)#</th><th>#(tH5)#</th><th id="TargetHead">#(tH6)#</th></tr>>

			Set tSortOrder=$G(%request.Data("SortOrder",1))
			Set (tBadTargs,tBadHdrs)=0, msgNoTarget=$ZCVT($$$LocalizeText("Ensemble","msgNoTarget","Target Not Running"),"O","HTML")
			Set msgid="" For i=1:1 { Set msgid=$O(^IRIS.Temp.ResendIDs(ctKey,msgid),$S(tSortOrder=2:-1,1:1))  Quit:""=msgid
				&sql(SELECT SessionId,MessageBodyId,MessageBodyClassname,SourceConfigName,TargetConfigName,TimeCreated
					 INTO :tSession,:tBodyId,:tBodyClass,:tSource,:tTarget,:tTimeCreated
					 FROM Ens.MessageHeader WHERE ID = :msgid)
				If SQLCODE {
					Set:'tBadHdrs tBadHdrs("msgid")="", tBadHdrs("SQLCODE")=SQLCODE
					Set tBadHdrs=tBadHdrs+1
					If i<=tMax {
						Set tSC=$$$ERROR($$$EnsErrGeneral,"Message header "_msgid_" not found; SQLCODE="_SQLCODE)
						Set tStatus=$ZCVT($$$StatusDisplayString(tSC),"O","HTML")
						&html<<tr align=center>
						 	<td colspan=6><font color="red">#($P(tStatus,":",1)_":<br><b>"_$P(tStatus,":",2,999))#</b></font></td>
							</tr>>
					}
				} Else {
					Set tBodyId=$S(""=tBodyId:"&nbsp;",1:$ZCVT(tBodyId,"O","HTML"))
					Set tQName=$G($$$ConfigQueueName(tTarget))
					If tQName="" {
						Set:'tBadTargs tBadTargs("msgid")=msgid
						Set tBadTargs("targ",tTarget)="",  tBadTargs=tBadTargs+1, tQLink=""
						Set:i<=tMax tTarget="<font color=""red"">"_msgNoTarget_" ("_tTarget_")</font>"
					} Else {
						Set:i<=tMax tQLink=" href="""_..Link("UtilEnsQList.csp?$ID1="_tQName)_""""
					}
					If i<=tMax {
						&html<<tr align=center>
							<td><a target=_blank href='#(..Link("UtilEnsMsgTrace.csp?$ID1="_tSession))#'>#(tSession)#</a></td>
							<td><a target=_blank href='#(..Link("UtilEnsMsgTrace.csp?$ID1="_msgid))#'>#(msgid)#</a></td>>
						If ""'=tBodyClass && ##class(%Dictionary.CompiledClass).%ExistsId(tBodyClass) && $zobjclassmethod(tBodyClass,"%Extends","Ens.VDoc.Interface") {
							&html<<td><a target=_blank href='#(..Link("EDIDocumentView.csp?CLASS="_tBodyClass_"&NAME="_tBodyClass_"&ORIGIN=HDR&HDR="_msgid_"&DOCSPEC=Stored#doc_content"))#'>#(tBodyId)#</a></td>>
						} Else {
							&html<<td><a target=_blank href='#(..Link("UtilEnsMsgDetails.csp?$FRAME=Info&ID1="_msgid))#'>#(tBodyId)#</a></td>>
						}
						&html<<td>#($P(##class(Ens.DataType.UTC).LogicalToDisplay(tTimeCreated),"."))#</td>
							<td>#(tSource)#</td>
							<td id='targ_#(i)#'><a target=_blank#(tQLink)#>#(tTarget)#</a></td>
							</tr>>
					}
				}
			}
			If $D(%session.Data("msgMaxDisplay")) {
				&html<<tr><td colspan=6><b>#(%session.Data("msgMaxDisplay"))#</b></td></tr>>
			}
			If $D(%session.Data("msgTopOverflow")) {
				&html<<tr><td colspan=6><font color="red"><b>#(%session.Data("msgTopOverflow"))#</b></font></td></tr>>
			}
			If tBadHdrs {
				Set msgBadHeaders=$ZCVT($$$FormatText($$$Text("%1 message headers could not be found, starting with Header #%2; SQLCODE=%3","Ensemble"),tBadHdrs,tBadHdrs("msgid"),tBadHdrs("SQLCODE")),"O","HTML")				
				&html<<tr><td colspan=6><font color="red"><b>#(msgBadHeaders)#</b></font></td></tr>>
			}
			If tBadTargs {
				Set (tBadTargsList,kbt)="" For { Set kbt=$O(tBadTargs("targ",kbt))  Quit:""=kbt  Set tBadTargsList=tBadTargsList_","_kbt }  Set tBadTargsList=$E(tBadTargsList,2,*)
				Set msgBadTargets=$ZCVT($$$FormatText($$$Text("%1 messages had non-running targets (%2), starting with Header #%3.","Ensemble"),tBadTargs,tBadTargsList,tBadTargs("msgid")),"O","HTML")				
				&html<<tr><td colspan=6><font color="red"><b>#(msgBadTargets)#</b></font></td></tr>>
			}
			&html<</table></div><br>>
		}
	} ElseIf action="done" {
		Set tH1 = $$$TextHTML("Resend Status","Ensemble")
		Set tH2 = $$$TextHTML("Session","Ensemble")
		Set tH3 = $$$TextHTML("Header","Ensemble")
		Set tH4 = $$$TextHTML("Msg Body","Ensemble")
		Set tH5 = $$$TextHTML("Created","Ensemble")
		Set tH6 = $$$TextHTML("Source","Ensemble")
		Set tH7 = $$$TextHTML("Target","Ensemble")

		&html<<br><div style="margin-left: 40px;">>
		
		&html<<table border=1 cellpadding=4 cellspacing=0>>
		&html<<tr align=center><th>#(tH1)#</th><th>#(tH2)#</th><th>#(tH3)#</th><th>#(tH4)#</th><th>#(tH5)#</th><th>#(tH6)#</th><th>#(tH7)#</th></tr>>
		
		Set msgid="" For { Set msgid=$O(^IRIS.Temp.ResendIDs(ctKey,msgid),1,newid)  Quit:""=msgid
			If $C(0)=$E(newid) { Set tSC=$E(newid,2,*), tErr=1 } Else { Set tSC=$$$OK, tErr=0 }
			&sql(SELECT SessionId,MessageBodyId,MessageBodyClassname,SourceConfigName,TargetConfigName,TimeCreated
				 INTO :tSession,:tBodyId,:tBodyClass,:tSource,:tTarget,:tTimeCreated
				 FROM Ens.MessageHeader WHERE ID = :msgid)
			If SQLCODE {
				Set:'tErr tSC=$$$ERROR($$$EnsErrGeneral,"Message header "_msgid_" not found; SQLCODE="_SQLCODE)
			} Else {
				Set tBodyId=$S(""=tBodyId:"&nbsp;",1:$ZCVT(tBodyId,"O","HTML"))
			}
			Set tStatus=$ZCVT($$$StatusDisplayString(tSC),"O","HTML")
			&html<<tr align=center>
				<td>#($S('tErr:"<b>"_tStatus,1:$P(tStatus,":",1)_":<br><b>"_$P(tStatus,":",2,999)))#</b></td>>

			If SQLCODE {
				Set msgNA="N/A"
				&html<<td>#(msgNA)#</td>
					<td>#(msgNA)#</td>
					<td>#(msgNA)#</td>
					<td>#(msgNA)#</td>
					<td>#(msgNA)#</td>
					<td>#(msgNA)#</td>
					</tr>>
			} ElseIf tErr {
				Set tOld = $$$TextHTML("Old","Ensemble")
				&html<<td><a target=_blank href='#(..Link("UtilEnsMsgTrace.csp?$ID1="_tSession))#'>#(tSession)#</a></td>
					<td><a target=_blank href='#(..Link("UtilEnsMsgTrace.csp?$ID1="_msgid))#'><i><b>#(tOld)#:</b> #(msgid)#</i></a></td>>
				If ""'=tBodyClass && ##class(%Dictionary.CompiledClass).%ExistsId(tBodyClass) && $zobjclassmethod(tBodyClass,"%Extends","Ens.VDoc.Interface") {
					&html<<td><a target=_blank href='#(..Link("EDIDocumentView.csp?CLASS="_tBodyClass_"&NAME="_tBodyClass_"&ORIGIN=HDR&HDR="_msgid_"&DOCSPEC=Stored#doc_content"))#'><i><b>#(tOld)#:</b> #(tBodyId)#</i></a></td>>
				} Else {
					&html<<td><a target=_blank href='#(..Link("UtilEnsMsgDetails.csp?$FRAME=Info&ID1="_msgid))#'><i><b>#(tOld)#:</b> #(tBodyId)#</i></a></td>>
				}
				&html<<td><i><b>#(tOld)#:</b> #($P(##class(Ens.DataType.UTC).LogicalToDisplay(tTimeCreated),"."))#</i></td>
				<td><i><b>#(tOld)#:</b> #(tSource)#</i></td>
				<td><i><b>#(tOld)#:</b> #(tTarget)#</i></td>
				</tr>>
			} Else {
				&html<<td><a target=_blank href='#(..Link("UtilEnsMsgTrace.csp?$ID1="_tSession))#'>#(tSession)#</a></td>
					<td><a target=_blank href='#(..Link("UtilEnsMsgTrace.csp?$ID1="_msgid))#'>#(msgid)#</a></td>>
				If ""'=tBodyClass && ##class(%Dictionary.CompiledClass).%ExistsId(tBodyClass) && $zobjclassmethod(tBodyClass,"%Extends","Ens.VDoc.Interface") {
					&html<<td><a target=_blank href='#(..Link("EDIDocumentView.csp?CLASS="_tBodyClass_"&NAME="_tBodyClass_"&ORIGIN=HDR&HDR="_msgid_"&DOCSPEC=Stored#doc_content"))#'>#(tBodyId)#</a></td>>
				} Else {
					&html<<td><a target=_blank href='#(..Link("UtilEnsMsgDetails.csp?$FRAME=Info&ID1="_msgid))#'>#(tBodyId)#</a></td>>
				}
				&html<<td>#($P(##class(Ens.DataType.UTC).LogicalToDisplay(tTimeCreated),"."))#</td>
					<td>#(tSource)#</td>
					<td>#(tTarget)#</td>
					</tr>>
			}
		}
		&html<</table>>
		&html<</div>>
		Kill ^IRIS.Temp.ResendIDs(ctKey)
	} Else { ; If action="cancel"
		Set msgResendCancelled = $ZCVT($$$LocalizeText("Ensemble","msgResendCancelled","Resend action cancelled."),"O","HTML")
		&html<<br><div style="margin-left: 40px;">#(msgResendCancelled)#</div>>
		Kill ^IRIS.Temp.ResendIDs(ctKey)
	}
</script>
</form>
</body>
<script language="CACHE" method="getQueueLink" runat="server" arguments="pConfigName:%String" returntype="%String">
	Set tQName=$G($$$ConfigQueueName(pConfigName))
	Quit:""'=tQName ..Link("UtilEnsQList.csp?$ID1="_tQName)
	Quit ""
</script>
<script language="CACHE" method="resendMessages" runat="server" arguments="pNewTarget:%String,pHeadOfQueue:%Boolean,pHdrIds:%String" returntype="%String">
	If "@"=$E(pHdrIds)&&'(pHdrIds[",") {
		Set ctKey=$E(pHdrIds,2,*)
		If pHeadOfQueue {
			Set msgid="" For { Set msgid=$O(^IRIS.Temp.ResendIDs(ctKey,msgid),-1)  Quit:""=msgid
				Set tSC=##class(Ens.MessageHeader).ResendDuplicatedMessage(msgid,.tNewHeaderId,pNewTarget,,,pHeadOfQueue)
				Set ^IRIS.Temp.ResendIDs(ctKey,msgid)=$S($$$ISERR(tSC):$C(0)_tSC,1:tNewHeaderId)
			}
		} Else { ; in reverse order
			Set msgid="" For { Set msgid=$O(^IRIS.Temp.ResendIDs(ctKey,msgid))  Quit:""=msgid
				Set tSC=##class(Ens.MessageHeader).ResendDuplicatedMessage(msgid,.tNewHeaderId,pNewTarget,,,pHeadOfQueue)
				Set ^IRIS.Temp.ResendIDs(ctKey,msgid)=$S($$$ISERR(tSC):$C(0)_tSC,1:tNewHeaderId)
			}
		}
	}
	Quit pHdrIds
</script>
</html>