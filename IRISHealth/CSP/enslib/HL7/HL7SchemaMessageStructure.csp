<AutoPageENS domain="Ensemble" parentpage="HL7SchemaMain.csp" pagename="HL7 Message Structure" title="@Ensemble:HL7ManagerMessageStructure@HL7 Message Structure">
<html>
<head>
<title>HL7 Message Structure</title>
<link rel="stylesheet" type="text/css" href="/csp/sys/csputils.css" title="Standard Style" />
</head>
<body>

<div class="Text1">HL7 <b>Message Structure</b> (<b>DocType</b>) definition is displayed below:</div>

<script language=Cache runat=server>
#Include EnsHL7
	set ms=%request.Get("MS")
	set category=$p(ms,":",2)
	set secondary=$p(ms,":",3)
	If ((category'="")&&(secondary'="")) {
		set description=..EscapeHTML(##class(EnsLib.HL7.Schema).GetDescription(ms))
		if $data($$$vaSchemaGbl(category,"MS",secondary))=0 {
			write "<b><font size=6>"_ms_" </font> Definition does not exist!</b>",!
			quit
		}
	}
</script>

<b><font size=6>#(category_":"_secondary)# </font> #($G(description))#</b>
<br><br>
<div style="margin-left: 20px; margin-right: 20px;">

<script language=Cache runat=server>
	If ((category'="")&&(secondary'="")) {
		Set struct=$$$vaSchemaGbl(category,"MS",secondary)
		
		#; Build segment paths list
		Set rs=##class(%ResultSet).%New("Ens.VDoc.Utils:EnumerateDocContents")
		Set sc=rs.Execute("EnsLib.HL7.Message",,category_":"_secondary,1)
		If $$$ISOK(sc) {
			Set iSeg=0,depth=0,fullpath=""
			For iRow=1:1 { Quit:'rs.Next()
				Set path=rs.Data("Property"), type=rs.Data("Type")
				If $E(path,depth+1)="." { Set depth=depth+1 }
				Else {
					While depth&&($E(path,depth)'=".") { Set depth=depth-1 }
				}
				Set seg=$P($P(type,":",3),"(")
				Set fullpath=$S(depth:$P(fullpath,".",1,depth)_".",1:"")_$E(path,depth+1,$L(path))
				If seg'["grp"&&(seg'["union") {
					Set iSeg=iSeg+1, segs(iSeg)=fullpath, segs(iSeg,"type")=seg
				}
			}
		}
		#; Draw segments table
		write "<table border=1 cellpadding=2 cellspacing=0 style=""font-size: 1.0em;""><tbody align=center><tr>",!
		Set iSeg=0  For i=1:1:$L(struct,"~")  {
			Set tSegRef=$P(struct,"~",i)
			If tSegRef="[" Write "<td><table border=1 cellpadding=2 cellspacing=0 style=""border: 2 dotted green""><tr>",! Continue
			If tSegRef="]" Write "</tr></table></td>",! Continue
			If tSegRef="{" Write "<td><table cellpadding=2 cellspacing=0 style=""border: 2 solid red""><tr>",! Continue
			If tSegRef="}" Write "</tr></table></td>",! Continue
			If tSegRef="<" Write "<td><table border=1 bordercolor=orange cellpadding=2 cellspacing=0 style=""border: 1 dotted""><tr>",! Continue
			If tSegRef=">" Write "</tr></table></td>",! Continue
			If tSegRef="|" Continue
			Set iSeg=iSeg+1, tName=$P(tSegRef,":",2)
			If "DocsRef"=$E(tName,*-$L("DocsRef")+1,*) {
				Set tRef=$S("Message"'=$E(tName,1,*-$L("DocsRef")):
							"HL7SchemaMessageType.csp?MT=MT:"_$p(tSegRef,":")_":"_$E(tName,1,*-$L("DocsRef"))
						, 1:"HL7SchemaList.csp?ELEMENT=MT&CATEGORY="_$S("."=$P(tSegRef,":"):$G($$$vaSchemaGbl(category,"base"),category),1:$P(tSegRef,":")))
				Write "<td><a title='Zero or more """_$E(tName,1,*-$L("DocsRef"))_""" documents appear here' href='"_..Link(tRef)_"'>"_tName_"</a></td>"
			} Else {
				Set tPath=$S($G(segs(iSeg,"type"))=tName&&(tName'=""):segs(iSeg), 1:"")
				Set tDesc=..EscapeHTML(##class(EnsLib.HL7.Schema).GetDescription("SS:"_tSegRef))
				Write "<td><a title='"_$S(""'=tPath:tPath, 1:tSegRef)_$S(""=tDesc:"",1:" - "_tDesc)_"' href='"_..Link("HL7SchemaSegmentStructure.csp?SS=SS:"_tSegRef_"&PATH="_$S(""=tPath:"",1:tPath)_"&MS="_ms)_"'>"_tName_"</a></td>"
			}
		}
		Write "</table>"

		Write "<br>"

		Write "<table cellpadding=4 cellspacing=0>"
		Write "<tr><td><table border=1 cellpadding=0 cellspacing=0 style=""border: 2 dotted green"" #000000><tr><td>&nbsp;&nbsp;&nbsp;&nbsp;</td></tr></table></td>"
		Write "<td>optional</td></tr>"
		Write "<tr><td><table cellpadding=0 cellspacing=0 style=""border: 2 solid red""><tr><td>&nbsp;&nbsp;&nbsp;&nbsp;</td></tr></table></td>"
		Write "<td>repeating</td></tr>"
		If struct["|" {
		  Write "<tr><td><table border=1 bordercolor=orange cellpadding=0 cellspacing=0 style=""border: 1 dotted"" #000000><tr><td>&nbsp;&nbsp;&nbsp;&nbsp;</td></tr></table></td>"
		  Write "<td>choice</td></tr>"
		}
		Write "</table>"
		Write "<br>"
	}
</script>

<p>
<a href="#(..Link("HL7SchemaMain.csp"))#">(Show All Categories)</a><br>
<a href="#(..Link("HL7SchemaList.csp?ELEMENT=MS&CATEGORY="_category))#">(Show All Message Structures in category '#(category)#')</a><br>
<a href="#(..Link("HL7SchemaRawStructure.csp?MS="_ms))#">(Show Raw Definition text)</a>
</div>
</body>
</html>