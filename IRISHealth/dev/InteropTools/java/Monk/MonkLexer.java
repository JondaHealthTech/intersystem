// Generated from Monk/Monk.g4 by ANTLR 4.7.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MonkLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		STRING=25, FLOAT=26, HEX=27, BIN=28, LONG=29, BIGN=30, CHAR_U=31, CHAR_NAMED=32, 
		CHAR_ANY=33, NIL=34, BOOLEAN=35, SYMBOL=36, NS_SYMBOL=37, PARAM_NAME=38, 
		TRASH=39;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "STRING", 
			"STRING_ESCAPECHAR", "FLOAT", "FLOAT_TAIL", "FLOAT_DECIMAL", "FLOAT_EXP", 
			"HEXD", "HEX", "BIN", "LONG", "BIGN", "CHAR_U", "CHAR_NAMED", "CHAR_ANY", 
			"NIL", "BOOLEAN", "SYMBOL", "NS_SYMBOL", "PARAM_NAME", "NAME", "SYMBOL_HEAD", 
			"SYMBOL_REST", "WS", "COMMENT", "TRASH"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'('", "')'", "'['", "']'", "'{'", "'}'", "'#{'", "'''", "'`'", 
			"'~'", "'~@'", "'^'", "'@'", "'#'", "'#('", "'#^'", "'#''", "'#+'", "'#_'", 
			"'#\\space'", "'#\\^'", "'#\\!'", "'#\\|'", "':'", null, null, null, 
			null, null, null, null, null, null, "'nil'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, "STRING", "FLOAT", "HEX", "BIN", "LONG", "BIGN", "CHAR_U", "CHAR_NAMED", 
			"CHAR_ANY", "NIL", "BOOLEAN", "SYMBOL", "NS_SYMBOL", "PARAM_NAME", "TRASH"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MonkLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Monk.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2)\u0188\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\3\2\3\2\3\3\3\3\3"+
		"\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3"+
		"\f\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3"+
		"\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3"+
		"\25\3\25\3\25\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3"+
		"\30\3\31\3\31\3\32\3\32\3\32\3\32\7\32\u00ad\n\32\f\32\16\32\u00b0\13"+
		"\32\3\32\3\32\3\33\3\33\3\34\5\34\u00b7\n\34\3\34\6\34\u00ba\n\34\r\34"+
		"\16\34\u00bb\3\34\3\34\5\34\u00c0\n\34\3\34\3\34\3\34\3\34\3\34\3\34\3"+
		"\34\3\34\3\34\5\34\u00cb\n\34\3\34\3\34\3\34\5\34\u00d0\n\34\3\35\3\35"+
		"\3\35\3\35\3\35\5\35\u00d7\n\35\3\36\3\36\6\36\u00db\n\36\r\36\16\36\u00dc"+
		"\3\37\3\37\5\37\u00e1\n\37\3\37\6\37\u00e4\n\37\r\37\16\37\u00e5\3 \3"+
		" \3!\3!\3!\6!\u00ed\n!\r!\16!\u00ee\3\"\3\"\3\"\6\"\u00f4\n\"\r\"\16\""+
		"\u00f5\3#\5#\u00f9\n#\3#\6#\u00fc\n#\r#\16#\u00fd\3#\5#\u0101\n#\3$\5"+
		"$\u0104\n$\3$\6$\u0107\n$\r$\16$\u0108\3$\3$\3%\3%\3%\3%\3%\3%\3%\3&\3"+
		"&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3"+
		"&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\5&\u013b\n&\3\'\3\'\3\'\3"+
		"(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3)\3)\5)\u014d\n)\3*\3*\5*\u0151\n*\3"+
		"+\3+\3+\3+\3,\3,\3,\7,\u015a\n,\f,\16,\u015d\13,\3,\5,\u0160\n,\3-\3-"+
		"\7-\u0164\n-\f-\16-\u0167\13-\3-\3-\6-\u016b\n-\r-\16-\u016c\7-\u016f"+
		"\n-\f-\16-\u0172\13-\3.\3.\3/\3/\5/\u0178\n/\3\60\3\60\3\61\3\61\7\61"+
		"\u017e\n\61\f\61\16\61\u0181\13\61\3\62\3\62\5\62\u0185\n\62\3\62\3\62"+
		"\2\2\63\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17"+
		"\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\2\67\349"+
		"\2;\2=\2?\2A\35C\36E\37G I!K\"M#O$Q%S&U\'W(Y\2[\2]\2_\2a\2c)\3\2\20\4"+
		"\2$$^^\3\2\62;\4\2GGgg\5\2\62;CHch\4\2ZZzz\4\2DDdd\3\2\62\63\4\2NNnn\4"+
		"\2PPpp\5\2\62;FHfh\20\2\13\f\17\17\"\"$%\'\')+..\61<BB]]_`bb}}\177\u0080"+
		"\b\2..\60<>>@@]]__\6\2\13\f\17\17\"\"..\4\2\f\f\17\17\2\u01a1\2\3\3\2"+
		"\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17"+
		"\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2"+
		"\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3"+
		"\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3"+
		"\2\2\2\2\63\3\2\2\2\2\67\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3"+
		"\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2"+
		"\2\2U\3\2\2\2\2W\3\2\2\2\2c\3\2\2\2\3e\3\2\2\2\5g\3\2\2\2\7i\3\2\2\2\t"+
		"k\3\2\2\2\13m\3\2\2\2\ro\3\2\2\2\17q\3\2\2\2\21t\3\2\2\2\23v\3\2\2\2\25"+
		"x\3\2\2\2\27z\3\2\2\2\31}\3\2\2\2\33\177\3\2\2\2\35\u0081\3\2\2\2\37\u0083"+
		"\3\2\2\2!\u0086\3\2\2\2#\u0089\3\2\2\2%\u008c\3\2\2\2\'\u008f\3\2\2\2"+
		")\u0092\3\2\2\2+\u009a\3\2\2\2-\u009e\3\2\2\2/\u00a2\3\2\2\2\61\u00a6"+
		"\3\2\2\2\63\u00a8\3\2\2\2\65\u00b3\3\2\2\2\67\u00cf\3\2\2\29\u00d6\3\2"+
		"\2\2;\u00d8\3\2\2\2=\u00de\3\2\2\2?\u00e7\3\2\2\2A\u00e9\3\2\2\2C\u00f0"+
		"\3\2\2\2E\u00f8\3\2\2\2G\u0103\3\2\2\2I\u010c\3\2\2\2K\u0113\3\2\2\2M"+
		"\u013c\3\2\2\2O\u013f\3\2\2\2Q\u014c\3\2\2\2S\u0150\3\2\2\2U\u0152\3\2"+
		"\2\2W\u0156\3\2\2\2Y\u0161\3\2\2\2[\u0173\3\2\2\2]\u0177\3\2\2\2_\u0179"+
		"\3\2\2\2a\u017b\3\2\2\2c\u0184\3\2\2\2ef\7*\2\2f\4\3\2\2\2gh\7+\2\2h\6"+
		"\3\2\2\2ij\7]\2\2j\b\3\2\2\2kl\7_\2\2l\n\3\2\2\2mn\7}\2\2n\f\3\2\2\2o"+
		"p\7\177\2\2p\16\3\2\2\2qr\7%\2\2rs\7}\2\2s\20\3\2\2\2tu\7)\2\2u\22\3\2"+
		"\2\2vw\7b\2\2w\24\3\2\2\2xy\7\u0080\2\2y\26\3\2\2\2z{\7\u0080\2\2{|\7"+
		"B\2\2|\30\3\2\2\2}~\7`\2\2~\32\3\2\2\2\177\u0080\7B\2\2\u0080\34\3\2\2"+
		"\2\u0081\u0082\7%\2\2\u0082\36\3\2\2\2\u0083\u0084\7%\2\2\u0084\u0085"+
		"\7*\2\2\u0085 \3\2\2\2\u0086\u0087\7%\2\2\u0087\u0088\7`\2\2\u0088\"\3"+
		"\2\2\2\u0089\u008a\7%\2\2\u008a\u008b\7)\2\2\u008b$\3\2\2\2\u008c\u008d"+
		"\7%\2\2\u008d\u008e\7-\2\2\u008e&\3\2\2\2\u008f\u0090\7%\2\2\u0090\u0091"+
		"\7a\2\2\u0091(\3\2\2\2\u0092\u0093\7%\2\2\u0093\u0094\7^\2\2\u0094\u0095"+
		"\7u\2\2\u0095\u0096\7r\2\2\u0096\u0097\7c\2\2\u0097\u0098\7e\2\2\u0098"+
		"\u0099\7g\2\2\u0099*\3\2\2\2\u009a\u009b\7%\2\2\u009b\u009c\7^\2\2\u009c"+
		"\u009d\7`\2\2\u009d,\3\2\2\2\u009e\u009f\7%\2\2\u009f\u00a0\7^\2\2\u00a0"+
		"\u00a1\7#\2\2\u00a1.\3\2\2\2\u00a2\u00a3\7%\2\2\u00a3\u00a4\7^\2\2\u00a4"+
		"\u00a5\7~\2\2\u00a5\60\3\2\2\2\u00a6\u00a7\7<\2\2\u00a7\62\3\2\2\2\u00a8"+
		"\u00ae\7$\2\2\u00a9\u00ad\n\2\2\2\u00aa\u00ab\7^\2\2\u00ab\u00ad\5\65"+
		"\33\2\u00ac\u00a9\3\2\2\2\u00ac\u00aa\3\2\2\2\u00ad\u00b0\3\2\2\2\u00ae"+
		"\u00ac\3\2\2\2\u00ae\u00af\3\2\2\2\u00af\u00b1\3\2\2\2\u00b0\u00ae\3\2"+
		"\2\2\u00b1\u00b2\7$\2\2\u00b2\64\3\2\2\2\u00b3\u00b4\13\2\2\2\u00b4\66"+
		"\3\2\2\2\u00b5\u00b7\7/\2\2\u00b6\u00b5\3\2\2\2\u00b6\u00b7\3\2\2\2\u00b7"+
		"\u00b9\3\2\2\2\u00b8\u00ba\t\3\2\2\u00b9\u00b8\3\2\2\2\u00ba\u00bb\3\2"+
		"\2\2\u00bb\u00b9\3\2\2\2\u00bb\u00bc\3\2\2\2\u00bc\u00bd\3\2\2\2\u00bd"+
		"\u00d0\59\35\2\u00be\u00c0\7/\2\2\u00bf\u00be\3\2\2\2\u00bf\u00c0\3\2"+
		"\2\2\u00c0\u00c1\3\2\2\2\u00c1\u00c2\7K\2\2\u00c2\u00c3\7p\2\2\u00c3\u00c4"+
		"\7h\2\2\u00c4\u00c5\7k\2\2\u00c5\u00c6\7p\2\2\u00c6\u00c7\7k\2\2\u00c7"+
		"\u00c8\7v\2\2\u00c8\u00d0\7{\2\2\u00c9\u00cb\7/\2\2\u00ca\u00c9\3\2\2"+
		"\2\u00ca\u00cb\3\2\2\2\u00cb\u00cc\3\2\2\2\u00cc\u00cd\7P\2\2\u00cd\u00ce"+
		"\7c\2\2\u00ce\u00d0\7P\2\2\u00cf\u00b6\3\2\2\2\u00cf\u00bf\3\2\2\2\u00cf"+
		"\u00ca\3\2\2\2\u00d08\3\2\2\2\u00d1\u00d2\5;\36\2\u00d2\u00d3\5=\37\2"+
		"\u00d3\u00d7\3\2\2\2\u00d4\u00d7\5;\36\2\u00d5\u00d7\5=\37\2\u00d6\u00d1"+
		"\3\2\2\2\u00d6\u00d4\3\2\2\2\u00d6\u00d5\3\2\2\2\u00d7:\3\2\2\2\u00d8"+
		"\u00da\7\60\2\2\u00d9\u00db\t\3\2\2\u00da\u00d9\3\2\2\2\u00db\u00dc\3"+
		"\2\2\2\u00dc\u00da\3\2\2\2\u00dc\u00dd\3\2\2\2\u00dd<\3\2\2\2\u00de\u00e0"+
		"\t\4\2\2\u00df\u00e1\7/\2\2\u00e0\u00df\3\2\2\2\u00e0\u00e1\3\2\2\2\u00e1"+
		"\u00e3\3\2\2\2\u00e2\u00e4\t\3\2\2\u00e3\u00e2\3\2\2\2\u00e4\u00e5\3\2"+
		"\2\2\u00e5\u00e3\3\2\2\2\u00e5\u00e6\3\2\2\2\u00e6>\3\2\2\2\u00e7\u00e8"+
		"\t\5\2\2\u00e8@\3\2\2\2\u00e9\u00ea\7\62\2\2\u00ea\u00ec\t\6\2\2\u00eb"+
		"\u00ed\5? \2\u00ec\u00eb\3\2\2\2\u00ed\u00ee\3\2\2\2\u00ee\u00ec\3\2\2"+
		"\2\u00ee\u00ef\3\2\2\2\u00efB\3\2\2\2\u00f0\u00f1\7\62\2\2\u00f1\u00f3"+
		"\t\7\2\2\u00f2\u00f4\t\b\2\2\u00f3\u00f2\3\2\2\2\u00f4\u00f5\3\2\2\2\u00f5"+
		"\u00f3\3\2\2\2\u00f5\u00f6\3\2\2\2\u00f6D\3\2\2\2\u00f7\u00f9\7/\2\2\u00f8"+
		"\u00f7\3\2\2\2\u00f8\u00f9\3\2\2\2\u00f9\u00fb\3\2\2\2\u00fa\u00fc\t\3"+
		"\2\2\u00fb\u00fa\3\2\2\2\u00fc\u00fd\3\2\2\2\u00fd\u00fb\3\2\2\2\u00fd"+
		"\u00fe\3\2\2\2\u00fe\u0100\3\2\2\2\u00ff\u0101\t\t\2\2\u0100\u00ff\3\2"+
		"\2\2\u0100\u0101\3\2\2\2\u0101F\3\2\2\2\u0102\u0104\7/\2\2\u0103\u0102"+
		"\3\2\2\2\u0103\u0104\3\2\2\2\u0104\u0106\3\2\2\2\u0105\u0107\t\3\2\2\u0106"+
		"\u0105\3\2\2\2\u0107\u0108\3\2\2\2\u0108\u0106\3\2\2\2\u0108\u0109\3\2"+
		"\2\2\u0109\u010a\3\2\2\2\u010a\u010b\t\n\2\2\u010bH\3\2\2\2\u010c\u010d"+
		"\7^\2\2\u010d\u010e\7w\2\2\u010e\u010f\t\13\2\2\u010f\u0110\5? \2\u0110"+
		"\u0111\5? \2\u0111\u0112\5? \2\u0112J\3\2\2\2\u0113\u013a\7^\2\2\u0114"+
		"\u0115\7p\2\2\u0115\u0116\7g\2\2\u0116\u0117\7y\2\2\u0117\u0118\7n\2\2"+
		"\u0118\u0119\7k\2\2\u0119\u011a\7p\2\2\u011a\u013b\7g\2\2\u011b\u011c"+
		"\7t\2\2\u011c\u011d\7g\2\2\u011d\u011e\7v\2\2\u011e\u011f\7w\2\2\u011f"+
		"\u0120\7t\2\2\u0120\u013b\7p\2\2\u0121\u0122\7u\2\2\u0122\u0123\7r\2\2"+
		"\u0123\u0124\7c\2\2\u0124\u0125\7e\2\2\u0125\u013b\7g\2\2\u0126\u0127"+
		"\7v\2\2\u0127\u0128\7c\2\2\u0128\u013b\7d\2\2\u0129\u012a\7h\2\2\u012a"+
		"\u012b\7q\2\2\u012b\u012c\7t\2\2\u012c\u012d\7o\2\2\u012d\u012e\7h\2\2"+
		"\u012e\u012f\7g\2\2\u012f\u0130\7g\2\2\u0130\u013b\7f\2\2\u0131\u0132"+
		"\7d\2\2\u0132\u0133\7c\2\2\u0133\u0134\7e\2\2\u0134\u0135\7m\2\2\u0135"+
		"\u0136\7u\2\2\u0136\u0137\7r\2\2\u0137\u0138\7c\2\2\u0138\u0139\7e\2\2"+
		"\u0139\u013b\7g\2\2\u013a\u0114\3\2\2\2\u013a\u011b\3\2\2\2\u013a\u0121"+
		"\3\2\2\2\u013a\u0126\3\2\2\2\u013a\u0129\3\2\2\2\u013a\u0131\3\2\2\2\u013b"+
		"L\3\2\2\2\u013c\u013d\7^\2\2\u013d\u013e\13\2\2\2\u013eN\3\2\2\2\u013f"+
		"\u0140\7p\2\2\u0140\u0141\7k\2\2\u0141\u0142\7n\2\2\u0142P\3\2\2\2\u0143"+
		"\u0144\7v\2\2\u0144\u0145\7t\2\2\u0145\u0146\7w\2\2\u0146\u014d\7g\2\2"+
		"\u0147\u0148\7h\2\2\u0148\u0149\7c\2\2\u0149\u014a\7n\2\2\u014a\u014b"+
		"\7u\2\2\u014b\u014d\7g\2\2\u014c\u0143\3\2\2\2\u014c\u0147\3\2\2\2\u014d"+
		"R\3\2\2\2\u014e\u0151\4\60\61\2\u014f\u0151\5Y-\2\u0150\u014e\3\2\2\2"+
		"\u0150\u014f\3\2\2\2\u0151T\3\2\2\2\u0152\u0153\5Y-\2\u0153\u0154\7\61"+
		"\2\2\u0154\u0155\5S*\2\u0155V\3\2\2\2\u0156\u015f\7\'\2\2\u0157\u015b"+
		"\4\63;\2\u0158\u015a\4\62;\2\u0159\u0158\3\2\2\2\u015a\u015d\3\2\2\2\u015b"+
		"\u0159\3\2\2\2\u015b\u015c\3\2\2\2\u015c\u0160\3\2\2\2\u015d\u015b\3\2"+
		"\2\2\u015e\u0160\7(\2\2\u015f\u0157\3\2\2\2\u015f\u015e\3\2\2\2\u015f"+
		"\u0160\3\2\2\2\u0160X\3\2\2\2\u0161\u0165\5[.\2\u0162\u0164\5]/\2\u0163"+
		"\u0162\3\2\2\2\u0164\u0167\3\2\2\2\u0165\u0163\3\2\2\2\u0165\u0166\3\2"+
		"\2\2\u0166\u0170\3\2\2\2\u0167\u0165\3\2\2\2\u0168\u016a\7<\2\2\u0169"+
		"\u016b\5]/\2\u016a\u0169\3\2\2\2\u016b\u016c\3\2\2\2\u016c\u016a\3\2\2"+
		"\2\u016c\u016d\3\2\2\2\u016d\u016f\3\2\2\2\u016e\u0168\3\2\2\2\u016f\u0172"+
		"\3\2\2\2\u0170\u016e\3\2\2\2\u0170\u0171\3\2\2\2\u0171Z\3\2\2\2\u0172"+
		"\u0170\3\2\2\2\u0173\u0174\n\f\2\2\u0174\\\3\2\2\2\u0175\u0178\5[.\2\u0176"+
		"\u0178\t\r\2\2\u0177\u0175\3\2\2\2\u0177\u0176\3\2\2\2\u0178^\3\2\2\2"+
		"\u0179\u017a\t\16\2\2\u017a`\3\2\2\2\u017b\u017f\7=\2\2\u017c\u017e\n"+
		"\17\2\2\u017d\u017c\3\2\2\2\u017e\u0181\3\2\2\2\u017f\u017d\3\2\2\2\u017f"+
		"\u0180\3\2\2\2\u0180b\3\2\2\2\u0181\u017f\3\2\2\2\u0182\u0185\5_\60\2"+
		"\u0183\u0185\5a\61\2\u0184\u0182\3\2\2\2\u0184\u0183\3\2\2\2\u0185\u0186"+
		"\3\2\2\2\u0186\u0187\b\62\2\2\u0187d\3\2\2\2 \2\u00ac\u00ae\u00b6\u00bb"+
		"\u00bf\u00ca\u00cf\u00d6\u00dc\u00e0\u00e5\u00ee\u00f5\u00f8\u00fd\u0100"+
		"\u0103\u0108\u013a\u014c\u0150\u015b\u015f\u0165\u016c\u0170\u0177\u017f"+
		"\u0184\3\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}